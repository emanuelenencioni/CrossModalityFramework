# General training parameters
experiment_name: simpleCLIPTrain
seed: 42
device: cuda  # or cpu
#checkpoint_path: unimodal_rgb_checkpoints/best/resnet50_yolox_20250802_151644_best.pth

# Data parameters
dataset:
  name: cityscapes
  data_dir: data
  batch_size: 2
  num_workers: 4
  outputs: ["image", "BB", "labels", "img_metas"] # these mandatory for unimodal training
  custom_classes: True # if True, the model will use custom classes defined in the dataset
  bb_num_classes: 8 # according to DSEC
  train_split: "cs_train.txt"
  val_split: "cs_val.txt"

# Model parameters TODO



model:
  name: 'resnet50_yolox'
  head: 
    name: 'yolox_head' # redoundant here, but useful for clarity
    num_classes: 8
    losses_weights: [3.0, 1.0, 1.0, 1.0]  # [iou, obj, cls, l1]
  backbone:
    name: '' # if name is empty -> stack of the two backbone will be used
    rgb_backbone: resnet50 # from timm
    pretrained: True # if not specified, it will be set to True
    pretrained_weights: #'../resnet50_backbone_from_detr.pth' # path to pretrained weights if needed
    embed_dim: 256
    input_size: 512
    output_indices: [1, 2, 3, 4] # indices of the output layers to be used
    #dropout: 0.25



# Optimizer parameters
optimizer:
  name: Adam
  lr: 0.001
  wd: 0.0005

# Loss function parameters
loss:
  name: cross_entropy

# Training loop parameters
trainer:
  epochs: 50
  log_interval: 500 # steps
  #val_interval: 500 # steps
  #checkpoint_interval: 50 # steps
  checkpoint_interval_epochs: 5 # save checkpoint every 5 epochs
  save_folder: unimodal_rgb_checkpoints

# Scheduler parameters (optional)
scheduler:
  name: 
  factor: 0.1
  patience: 5
  monitor: val_loss
  mode: min

# Logging parameters
logger:
  name: wandb
  project: Cross_Modality_Framework  # Replace with your wandb project name
  entity: TwoGuysOneCode
